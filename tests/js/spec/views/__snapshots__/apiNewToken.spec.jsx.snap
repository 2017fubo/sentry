// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApiNewToken render() renders 1`] = `
<DocumentTitle
  title="Create API Token"
>
  <div>
    <Modal
      animation={false}
      autoFocus={true}
      backdrop={true}
      bsClass="modal"
      dialogComponentClass={[Function]}
      enforceFocus={true}
      keyboard={true}
      manager={
        ModalManager {
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "modals": Array [],
        }
      }
      onHide={[Function]}
      renderBackdrop={[Function]}
      restoreFocus={true}
      show={false}
    >
      <div
        className="modal-header"
      >
        <h4>
          Confirm Your Identity
        </h4>
      </div>
      <div
        className="modal-body"
      >
        <div>
          <p>
            You will need to reauthenticate to continue.
          </p>
          <Button
            disabled={false}
            href="/auth/login/?next="
            priority="primary"
          >
            Continue
          </Button>
        </div>
      </div>
    </Modal>
    <NarryLayout>
      <h3>
        Create New Token
      </h3>
      <hr />
      <p>
        Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.
      </p>
      <p>
        <span
          key="5"
        >
          <span
            key="0"
          >
            For more information on how to use the web API, see our 
          </span>
          <a
            href="https://docs.sentry.io/hosted/api/"
            key="2"
          >
            <span
              key="1"
            >
              documentation
            </span>
          </a>
          <span
            key="3"
          >
            .
          </span>
        </span>
      </p>
      <ApiForm
        apiEndpoint="/api-tokens/"
        apiMethod="POST"
        cancelLabel="Cancel"
        className="form-stacked api-new-token"
        footerClass="form-actions align-right"
        initialData={
          Object {
            "scopes": Array [
              "event:admin",
              "event:read",
              "member:read",
              "org:read",
              "project:read",
              "project:releases",
              "team:read",
            ],
          }
        }
        onCancel={[Function]}
        onSubmitSuccess={[Function]}
        requireChanges={false}
        submitDisabled={false}
        submitErrorMessage="There was an error saving your changes."
        submitLabel="Save Changes"
        submitLoadingMessage="Saving changes.."
      >
        <MultipleCheckboxField
          choices={
            Array [
              Array [
                "project:read",
                "project:read",
              ],
              Array [
                "project:write",
                "project:write",
              ],
              Array [
                "project:admin",
                "project:admin",
              ],
              Array [
                "project:releases",
                "project:releases",
              ],
              Array [
                "team:read",
                "team:read",
              ],
              Array [
                "team:write",
                "team:write",
              ],
              Array [
                "team:admin",
                "team:admin",
              ],
              Array [
                "event:read",
                "event:read",
              ],
              Array [
                "event:admin",
                "event:admin",
              ],
              Array [
                "org:read",
                "org:read",
              ],
              Array [
                "org:write",
                "org:write",
              ],
              Array [
                "org:admin",
                "org:admin",
              ],
              Array [
                "member:read",
                "member:read",
              ],
              Array [
                "member:admin",
                "member:admin",
              ],
            ]
          }
          disabled={false}
          hideErrorMessage={false}
          label="Scopes"
          name="scopes"
          required={true}
        />
      </ApiForm>
    </NarryLayout>
  </div>
</DocumentTitle>
`;
